% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_flexfile.R
\name{stack_ff}
\alias{stack_ff}
\title{Stack list of FlexFiles or Quantity Reports into one list}
\usage{
stack_ff(data)
}
\arguments{
\item{data}{A list of FlexFile or Quantity Report tibbles converted from JSON format.}
}
\value{
A list of stacked tibbles.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

This function is depreciated because stacking individual JSON tables is no longer
recommended. See \code{vignette("importing-flexfile")} for the preferred workflow.
If the functionality is still required, use \code{\link[costmisc]{unnest_df}()} instead.

\code{stack_ff()} reads in a list of lists of FlexFile or Quantity Report tibbles and returns a
single list of stacked tibbles. The \code{data} list should not mix report type (i.e.,
it should contain all FlexFiles or all Quantity Reports).

This is a thin wrapper around \code{\link[costmisc]{unnest_df}()}.
}
\examples{
\dontrun{
folder <- system.file("extdata", package = "flexample")

flexfiles <- read_folder(folder, read_flexfile) \%>\%
  listindex_to_col() \%>\%
  stack_ff()
}
}
