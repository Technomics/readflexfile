sfc_mapping <- readxl::read_excel("data-raw/standard-category-mapping.xlsx", sheet = "Functional Categories")
sfc_colors <- readxl::read_excel("data-raw/standard-category-mapping.xlsx", sheet = "Colors")
usethis::use_data(sfc_mapping, overwrite = TRUE)
category_colors_sfc <- dplyr::distinct(sfc_colors, standard_category_id, hex)
category_colors_d_o <- dplyr::distinct(sfc_colors, direct_or_overhead, d_o_hex)
usethis::use_data(category_colors_sfc, category_colors_d_o, internal = TRUE, overwrite = TRUE)
load("C:/Users/bberkman/Software/Git Local/costverse/readflexfile/data/sfc_mapping.rda")
# Data folders
usethis::use_data_raw(name = "sfc_mapping")
usethis::use_data(sfc_mapping, overwrite = TRUE)
devtools::document()
devtools::build(binary = TRUE)
devtools::build()
install.packages("C:/Users/bberkman/Software/Git Local/costverse/readflexfile_0.0.0.9000.tar.gz")
getwd
getwd()
library(readflexfile)
readflexfile::read_ff("C:/2. cade-offsite/LMCO Aero/LMCO Aero/F-22/46141_AF-12-I-C1/Template/Part 2 - Actual Cost-Hour Data Import.zip") %>%
costmisc::add_id_col()
library(dplyr)
readflexfile::read_ff("C:/2. cade-offsite/LMCO Aero/LMCO Aero/F-22/46141_AF-12-I-C1/Template/Part 2 - Actual Cost-Hour Data Import.zip") %>%
costmisc::add_id_col()
readflexfile::read_ff("C:/2. cade-offsite/LMCO Aero/LMCO Aero/F-22/46141_AF-12-I-C1/Template/Part 2 - Actual Cost-Hour Data Import.zip") %>%
costmisc::add_id_col() %>%
readflexfile::flatten_ff()
devtools::build(binary = TRUE)
devtools::build()
install.packages("C:/Users/bberkman/Software/Git Local/costverse/readflexfile_0.0.0.9000.tar.gz")
library(readflexfile)
readflexfile::read_ff("C:/2. cade-offsite/LMCO Aero/LMCO Aero/F-22/46141_AF-12-I-C1/Template/Part 2 - Actual Cost-Hour Data Import.zip") %>%
costmisc::add_id_col() %>%
readflexfile::flatten_ff()
install.packages("C:/Users/bberkman/Software/Git Local/costverse/readflexfile_0.0.0.9000.tar.gz")
library(readflexfile)
library(readflexfile)
install.packages("C:/Users/bberkman/Software/Git Local/costverse/readflexfile_0.0.0.9000.tar.gz")
devtools::install("C:/Users/bberkman/Software/Git Local/costverse/readflexfile_0.0.0.9000.tar.gz")
library(readflexfile)
# Set name
options(usethis.full_name = "Adam H. James")
# Ignore folders on build
usethis::use_build_ignore("tools")
# Import badges for use in documentation
usethis::use_lifecycle()
# License
usethis::use_gpl3_license("Technomics, Inc.")
# Data folders
usethis::use_data_raw(name = "sfc_mapping")
# Package site
usethis::use_pkgdown()
# Readme setup with RMarkdown
rnomics::use_readme()
# allow markdown rendering in documentation
desc::desc_set("Roxygen", "list(markdown = TRUE)")
# Description list
description <- list(Description = "Read the FlexFile native data into R.",
Title = "Read FlexFile data",
`Authors@R` = list(person(given = "Adam H.", family = "James",
email = "ajames@technomics.net", role = c("cre","aut"))))
desc::desc_add_author(given = "Technomics, Inc", role = "cph")
usethis::use_lifecycle_badge("Maturing")
rnomics::use_badge_passing()
pkgdown::build_reference()
devtools::document()
pkgdown::build_reference()
devtools::document()
# Package site
usethis::use_pkgdown()
pkgdown::build_reference()
pkgdown::build_reference()
# Package dependencies
usethis::use_pipe()
usethis::use_package("dplyr", min_version = "0.8.3")
usethis::use_package("rio")
usethis::use_package("jsonlite")
usethis::use_package("janitor")
usethis::use_package("tidyr", min_version = "1.0.0")
usethis::use_package("tibble", min_version = "2.0.0")
usethis::use_package("purrr", min_version = "0.3.3")
usethis::use_package("rlang", min_version = "0.4.2")
usethis::use_package("costmisc", min_version = "0.1.0.9000")
usethis::use_package("rlang", min_version = "0.4.2")
usethis::use_package("costmisc", min_version = "0.1.0.9000")
usethis::use_package("stringr", min_version = "1.4.0")
usethis::use_package("lifecycle")
devtools::document()
pkgdown::build_reference()
devtools::check()
# Package dependencies
usethis::use_pipe()
devtools::document()
devtools::check()
usethis::use_package("magrittr")
devtools::document()
devtools::check()
file <- system.file("extdata", "Sample File_FF.zip", package = "csdrtools")
source('C:/Users/bberkman/Software/Git Local/costverse/readflexfile/R/flatten_ff.R', echo=TRUE)
file <- system.file("extdata", "Sample File_FF.zip", package = "readflexfile")
devtools::check()
usethis::use_package("lubridate")
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::build(binary = TRUE)
devtools::build()
install.packages("C:/Users/bberkman/Software/Git Local/costverse/readflexfile_0.0.0.9000.tar.gz")
getwd()
devtools::install("C:/Users/bberkman/Software/Git Local/costverse/readflexfile_0.0.0.9000.tar.gz")
library(readflexfile)
readflexfile::read_ff("C:/2. cade-offsite/LMCO Aero/LMCO Aero/F-22/46141_AF-12-I-C1/Template/Part 2 - Actual Cost-Hour Data Import.zip") %>%
costmisc::add_id_col() %>%
readflexfile::flatten_ff()
install.packages("readflexfile")
install.packages("readflexfile")
devtools::check()
devtools::build_site()
devtools::document()
devtools::spell_check()
install.packages("spelling")
devtools::spell_check()
# Package site
usethis::use_pkgdown()
pkgdown::build_reference()
devtools::document()
pkgdown::build_reference()
devtools::document()
devtools::load_all()
devtools::use_testthat()
devtools::uses_testthat()
devtools::uses_testthat()
devtools::use_testthat()
testthat::auto_test()
devtools::has_tests()
devtools::test()
library(testthat)
library(readflexfile)
test_check("readflexfile")
devtools::test()
?context
library(readflexfile)
library(costmisc)
?read_flexfile
?read_ff
file <- system.file("extdata", "Sample File_FF.zip", package = "readflexfile")
flexfile <- read_ff(file)
files <- system.file("extdata/multiple-flexfiles", package = "readflexfile")
flexfiles <- costmisc::read_folder(files, read_ff) %>%
costmisc::listindex_to_col() %>%
stack_ff()
flexfile <- read_ff(file) %>%
costmisc::add_id_col() %>%
flatten_ff()
test_that(flexfile <- read_ff(file) %>%
costmisc::add_id_col() %>%
flatten_ff())
usethis::use_version()
devtools::build(binary = TRUE)
devtools::build()
