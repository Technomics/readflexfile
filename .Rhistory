case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id),
value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
combine <- left_join(atd, ff$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id),
end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id),
wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id),
value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
sum(atd$value_dollars, na.rm = T)
sum(combine$value_dollars, na.rm = T)
sum(atd$value_hours, na.rm = T)
sum(combine$value_hours, na.rm = T)
combine <- left_join(atd, ff$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id),
try(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id)),
wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id),
value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
combine <- left_join(atd, ff$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
try(mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id),
end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id),
wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id),
value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours)))
combine <- left_join(atd, ff$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id)) %>%
mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id)) %>%
mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id)) %>%
mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id)) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
colnames(combine)
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id)) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
combine <- left_join(atd, ff$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id)) %>%
mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id)) %>%
mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id)) %>%
mutate(wbs_element_id =
case_when(
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id)) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
sum(atd$value_dollars, na.rm = T)
sum(combine$value_dollars, na.rm = T)
sum(atd$value_hours, na.rm = T)
sum(combine$value_hours, na.rm = T)
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id))) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
combine <- left_join(atd, ff$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
try(mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id))) %>%
try(mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id))) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
allocate <- function(flexfile) {
left_join(flexfile$actualcosthourdata, flexfile$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
try(mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id))) %>%
try(mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id))) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
}
allocate(ff)
ff <- read_ff("C:/Users/bberkman/Downloads/Cost and Data FlexFile 2.13.2020.zip") %>%
readflexfile::add_id_col() %>%
flatten_ff()
ff <- read_ff("C:/Users/bberkman/Downloads/Cost and Data FlexFile 2.13.2020.zip") %>%
readflexfile::add_id_col()
warnings()
allocate <- function(flexfile) {
flexfile$actualcosthourdata <- left_join(flexfile$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
try(mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id))) %>%
try(mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id))) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
}
allocate(ff)
allocate <- function(flexfile) {
flexfile$actualcosthourdata <- left_join(flexfile$actualcosthourdata, flexfile$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
try(mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id))) %>%
try(mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id))) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
}
allocate(ff)
View(ff)
ff$actualcosthourdata
view(flexfile$actualcosthourdata)
x <- flexfile$actualcosthourdata
x <- ff$actualcosthourdata
View(x)
allocate(ff)
x <- ff$actualcosthourdata
ff <- read_ff("C:/Users/bberkman/Downloads/Cost and Data FlexFile 2.13.2020.zip") %>%
readflexfile::add_id_col() %>%
allocate()
x <- ff$actualcosthourdata
allocate <- function(flexfile) {
flexfile$actualcosthourdata <- left_join(flexfile$actualcosthourdata, flexfile$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
try(mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id))) %>%
try(mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id))) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
return(flexfile)
}
ff <- read_ff("C:/Users/bberkman/Downloads/Cost and Data FlexFile 2.13.2020.zip") %>%
readflexfile::add_id_col() %>%
allocate()
x <- ff$actualcosthourdata
sum(atd$value_dollars, na.rm = T)
sum(combine$value_dollars, na.rm = T)
sum(ff$actualcosthourdata$value_dollars, na.rm = T)
ff <- read_ff("C:/Users/bberkman/Downloads/Cost and Data FlexFile 2.13.2020.zip") %>%
readflexfile::add_id_col() %>%
allocate() %>%
flatten_ff()
allocate_ff <- function(flexfile) {
flexfile$actualcosthourdata <- left_join(flexfile$actualcosthourdata, flexfile$allocationcomponents, by = "allocation_method_id",
suffix = c("", ".allocations")) %>%
try(mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id))) %>%
try(mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id))) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
return(flexfile)
}
ff <- read_ff("C:/Users/bberkman/Downloads/Cost and Data FlexFile 2.13.2020.zip") %>%
readflexfile::add_id_col() %>%
allocate_ff() %>%
readflexfile::flatten_ff()
names(flexfile$actualcosthourdata)[1]
names(ff$actualcosthourdata)[1]
allocate_ff <- function(flexfile) {
flexfile$actualcosthourdata <- left_join(flexfile$actualcosthourdata, flexfile$allocationcomponents,
by = c("allocation_method_id",
names(flexfile$actualcosthourdata)[1]),
suffix = c("", ".allocations")) %>%
try(mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id))) %>%
try(mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id))) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
return(flexfile)
}
ff <- read_ff("C:/Users/bberkman/Downloads/Cost and Data FlexFile 2.13.2020.zip") %>%
readflexfile::add_id_col() %>%
allocate_ff() %>%
readflexfile::flatten_ff()
test <- read_ff("C:/2. cade-offsite/LMCO Aero/LMCO Aero/F-22/46141_AF-12-I-C1/Template/Part 2 - Actual Cost-Hour Data Import.zip") %>%
readflexfile::add_id_col() %>%
allocate_ff() %>%
readflexfile::flatten_ff()
test <- read_ff("C:/2. cade-offsite/LMCO Aero/LMCO Aero/F-22/46141_AF-12-I-C1/Template/Part 2 - Actual Cost-Hour Data Import.zip") %>%
readflexfile::add_id_col() %>%
readflexfile::flatten_ff()
test <- read_ff("C:/2. cade-offsite/LMCO Aero/LMCO Aero/F-22/46141_AF-12-I-C1/Template/Part 2 - Actual Cost-Hour Data Import.zip") %>%
readflexfile::add_id_col()
test$actualcosthourdata <- left_join(test$actualcosthourdata, test$allocationcomponents,
by = c("allocation_method_id",
names(flexfile$actualcosthourdata)[1]),
suffix = c("", ".allocations")) %>%
try(mutate(order_or_lot_id =
case_when(
is.na(order_or_lot_id) ~ order_or_lot_id.allocations,
TRUE ~ order_or_lot_id))) %>%
try(mutate(end_item_id =
case_when(
is.na(end_item_id) ~ end_item_id.allocations,
TRUE ~ end_item_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(wbs_element_id) ~ wbs_element_id.allocations,
TRUE ~ wbs_element_id))) %>%
try(mutate(wbs_element_id =
case_when(
is.na(unit_or_sublot_id) ~ unit_or_sublot_id.allocations,
TRUE ~ unit_or_sublot_id))) %>%
mutate(value_dollars =
case_when(!is.na(allocation_method_id) ~ value_dollars*percent_value,
TRUE ~ value_dollars),
value_hours =
case_when(!is.na(allocation_method_id) ~ value_hours*percent_value,
TRUE ~ value_hours))
test$actualcosthourdata <- left_join(test$actualcosthourdata, test$allocationcomponents,
by = c("allocation_method_id",
names(flexfile$actualcosthourdata)[1]),
suffix = c("", ".allocations"))
View(test)
devtools::document()
devtools::check()
devtools::check()
rnomics::gitlab_clone("costverse/analyzeflexfile", "costverse")
?usethis::use_git_credentials
usethis::use_git_credentials(protocol = "https",
"DzsDsLFwsFBWUrbUauqc")
usethis::use_git_credentials("DzsDsLFwsFBWUrbUauqc")
rnomics::gitlab_clone("costverse/analyzeflexfile", "costverse")
?usethis::create_from_github
usethis::create_from_github("costverse/analyzeflexfile", "O:/Personal/Ben Berkman")
usethis::github_token("DzsDsLFwsFBWUrbUauqc")
usethis::github_token()
usethis::browse_github_pat()
usethis::create_from_github("costverse/analyzeflexfile", "O:/Personal/Ben Berkman", auth_token = "DzsDsLFwsFBWUrbUauqc")
GITHUB_PAT <- "DzsDsLFwsFBWUrbUauqc"
usethis::github_token()
usethis::github_token(GITHUB_PAT)
?rnomics::gitlab_clone
rnomics::gitlab_clone(
repo = "costverse/analyzeflexfile",
subdirectory = "costverse",
local_path = setupr::get_dirs()$git_local,
.sslVerify = TRUE,
.server = "https://192.168.10.152/"
)
rnomics::gitlab_clone(
repo = "costverse/analyzeflexfile",
subdirectory = "costverse",
local_path = setupr::get_dirs()$git_local,
.sslVerify = TRUE,
.server = "192.168.10.152/"
)
rnomics::gitlab_clone(
repo = "costverse/readflexfile",
subdirectory = "technomics",
local_path = setupr::get_dirs()$git_local,
.sslVerify = TRUE,
.server = "192.168.10.152/"
)
rnomics::gitlab_clone(
repo = "costverse/readflexfile",
subdirectory = "technomics",
local_path = setupr::get_dirs()$git_local,
.sslVerify = TRUE,
.server = "https://192.168.10.152/"
)
rnomics::gitlab_clone(
repo = "costverse/readflexfile",
subdirectory = "technomics",
local_path = setupr::get_dirs()$git_local,
.sslVerify = TRUE,
.server = "https://192.168.10.152"
)
rnomics::gitlab_clone(
repo = "costverse/readflexfile",
subdirectory = "technomics",
local_path = setupr::get_dirs()$git_local,
.sslVerify = TRUE,
.server = "https://192.168.10.152"
)
rnomics::gitlab_clone(
repo = "costverse/readflexfile",
subdirectory = "technomics",
local_path = setupr::get_dirs()$git_local,
.sslVerify = TRUE,
.server = "https://192.168.10.152/"
)
rnomics::gitlab_clone(
repo = "costverse/readflexfile",
subdirectory = "technomics",
local_path = "C:/Users/bberkman/Software/Git Local",
.sslVerify = TRUE,
.server = "https://192.168.10.152/"
)
rnomics::gitlab_clone(
repo = "costverse/readflexfile",
subdirectory = "technomics",
local_path = "C:/Users/bberkman/Software/Git Local",
.sslVerify = TRUE,
.server = "https://gitlab.technomics.net/"
)
rnomics::gitlab_clone(
repo = "costverse/readflexfile",
subdirectory = "technomics",
local_path = "C:/Users/bberkman/Software/Git Local",
.sslVerify = TRUE,
.server = "https://gitlab.technomics.net/"
)
rnomics::gitlab_clone(
repo = "costverse/readflexfile",
subdirectory = "technomics",
local_path = "C:/Users/bberkman/Software/Git Local",
.sslVerify = TRUE,
.server = "https://gitlab.technomics.net/"
)
rnomics::gitlab_clone(
repo = "costverse/analyzeflexfile",
subdirectory = "costverse",
local_path = "C:/Users/bberkman/Software/Git Local",
.sslVerify = TRUE,
.server = "https://gitlab.technomics.net/"
)
